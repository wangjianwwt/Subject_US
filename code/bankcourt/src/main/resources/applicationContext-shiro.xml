<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

	<!-- 继承自AuthorizingRealm的自定义Realm,即指定Shiro验证用户登录的类为自定义realm -->
	<bean id="myRealm" class="com.born.bc.system.realm.MyRealm">
		<!-- 关闭授权缓存域，把authorizationCachingEnabled设置为false -->
		<property name="authorizationCachingEnabled" value="false"/>  
	</bean>

	<!-- Shiro默认会使用Servlet容器的Session,可通过sessionMode属性来指定使用Shiro原生Session -->
	<!-- 即<property name="sessionMode" value="native"/>,详细说明见官方文档 -->
	<!-- 这里主要是设置自定义的单Realm应用,若有多个Realm,可使用'realms'属性代替 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="myRealm" />
	</bean>

	<!-- shiro 过滤器 -->
	<!-- Shiro主过滤器本身功能十分强大,其强大之处就在于它支持任何基于URL路径表达式的、自定义的过滤器的执行 -->
	<!-- Web应用中,Shiro可控制的Web请求必须经过Shiro主过滤器的拦截,Shiro对基于Spring的Web应用提供了完美的支持 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<!-- shiro核心安全接口，必须配置 -->
		<property name="securityManager" ref="securityManager" />
		<!-- 身份认证失败跳转路径 -->
		<!-- 要求登录时的链接(可根据项目的URL进行替换),非必须的属性 -->
		<property name="loginUrl" value="/msg/sessionout" />
		<!-- 权限认证失败跳转路径 -->
		<property name="unauthorizedUrl" value="/msg/unauthorized" />
		<!-- shiro 连接约束 -->
		<!-- Shiro连接约束配置,即过滤链的定义 -->
		<!-- 此处可配合我的这篇文章来理解各个过滤连的作用http://blog.csdn.net/jadyer/article/details/12172839 -->
		<!-- 下面value值的第一个'/'代表的路径是相对于HttpServletRequest.getContextPath()的值来的 -->
		<!-- anon：它对应的过滤器里面是空的,什么都没做,这里.do和.jsp后面的*表示参数,比方说login.jsp?main这种 -->
		<!-- authc：该过滤器下的页面必须验证后才能访问,它是Shiro内置的一个拦截器org.apache.shiro.web.filter.authc.FormAuthenticationFilter -->
		<property name="filterChainDefinitions">
			<value>
				<!-- 静态资源不拦截 -->
				/resources/** = anon
				<!-- 线程池web -->
				/druid/** = anon
				<!-- 请求脱管 -->
			    /api/** = anon
				/**/login = anon
				/msg/** = anon
				<!-- 支付录入 -->
				/courtPayOrder/** = perms[pay:*]
				<!-- pos管理权限配置 -->
				/posPay/** = perms[pos:*]
				<!-- 网银管理权限配置 -->
				/interPay/** = perms[inter:*]
				<!-- 个案权限配置 -->
				/case/** = perms[case:*]
				<!-- 用户管理权限配置 -->
				/user/** = perms[user:*]
				<!-- 角色管理权限配置 -->
				/role/** = perms[role:*]
				<!-- 资源管理权限配置 -->
				/permission/** = perms[permission:*]
				<!-- 银行管理 -->
				/bankManager/** = perms[bank:*]
				<!-- 科目维护 -->
				/subject/** = perms[subject:*]
				<!-- 财务台账所有权限 -->
				/cwtz/** = perms[cwtz:*]
				<!-- 凭证模块权限 -->
				/pzxc/** = perms[finace:*]
				<!-- 基础数据导入权限配置 -->
				/data/import = perms[data:import]
				
				/**=authc
			</value>
		</property>
	</bean>
	
	<!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
	
	<!-- 开启shiro 注解 -->
	<!-- 
	<bean
		class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
		depends-on="lifecycleBeanPostProcessor" />
	<bean
		class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean> 
	-->

</beans>	